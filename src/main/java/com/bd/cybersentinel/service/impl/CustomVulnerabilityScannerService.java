package com.bd.cybersentinel.service.impl;

import org.springframework.stereotype.Service;

import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.List;

@Service
public class CustomVulnerabilityScannerService {

    private final List<String> sqlPayloads = List.of(
            "' OR '1'='1",
            "' OR 1=1 --",
            "' OR 'a'='a",
            "'; DROP TABLE users; --"
    );

    public String testSqlInjection(String baseUrl) {
        for (String payload : sqlPayloads) {
            String testUrl = baseUrl + URLEncoder.encode(payload, StandardCharsets.UTF_8);
            try {
                HttpURLConnection connection = (HttpURLConnection) new URL(testUrl).openConnection();
                connection.setRequestMethod("GET");
                connection.setConnectTimeout(5000);
                connection.setReadTimeout(5000);
                int responseCode = connection.getResponseCode();

                String body = new String(connection.getInputStream().readAllBytes());

                // Basic detection logic (can be enhanced)
                if (body.toLowerCase().contains("sql syntax")
                        || body.toLowerCase().contains("mysql")
                        || body.toLowerCase().contains("psql")
                        || body.toLowerCase().contains("exception")) {
                    return "⚠️ SQL Injection detected with payload: " + payload;
                }

            } catch (Exception e) {
                return "❌ Error testing payload: " + payload + " - " + e.getMessage();
            }
        }

        return "✅ No obvious SQL Injection detected.";
    }
}
